1. setup app
    c-make sure express is working correctly
    c-edit index.html
    c-remove fullstack bloat
    c-later-add main file html/css
        *bootstrapped it :(

2. set up sign ins
    c-twitter
        C-get user timelines from twitter api(look into twit module)
        C-in /twitter do an "if (!user) show login"
    c-facebook sign in
*        -get user timelines -- can't pull feeds w/o facebook approval
c-hotfix: set up userdata in local storeage
c-hotfix: seperate out login stratagies
    c-youtube sign in
        c-get subscription feed
    C-instagram login
        c-feed

c-3 need persistant data for users(feature: single sign on?)not needed-may need database?
    c-localStoreage used

c-4 feature: chronological home screen:
c-:hotfix - dynamic passport redirects
    c-get all avalable feeds
    c-merge them based on time
        c-need to convert times first
        c-back or front end? backend time conversions, front end sorting
        c-check out moment js
        c-sort
c-:hotfix - cache api calls for testing(need time stamp for refreshes)
    c-display correct data per article
    
5. todos:
    c-get youtube link
    c-get twitter user profile pic
    c-twitter links and stuff filter
    c-make directives for styling different articles
    -twitter handle link
    -filter if date today don't display
    -style templates
        c-twitter
        -youtube
        -instagram
        C-main tabs iphone4 fuck up
    -remove localstorage
    -remove tokens from localstorage
    -make log out button
    -.gitignore secrets
    -research refresh tokens
    -pull to refresh feature
        -timestamp api calls from backend
        -if inside 5 min hit cache
        -if force param is used dont hit cache
            || req.param('force') == true
        -scope.pullToRefresh = function() {
            $http({
                url : 'api/blah/blah',
                method : "GET",
                params : {force : true}
            ).success(function(data) {
                dataList = data;
            });
        }
        -angular gesture directives
    -concat CSS
    -checkboxes for adding and removing feeds
    -better sort alorithm for chrono page
     

6 write tests:
    c-mock objects
    -mock services
        handeled case for: 
            -is logged in, return correct user
        need case for:
            -not logged in, return null user
    -directives
        ng-show
        filters
    -e2e ??

7. deployment procedure
    -figure out a way to do a deployment. heroku?
8ish. news rss feeds?


**other goals
    mobile friendly(media-queries)
    pages for each sign in 
    swiping functionality for page-to-page transitions
        cool looking transitions (stick to finger swiping)
    asyncronous loading of initial pages
    pull to refresh
    remember sign in(cookies?)
        time since last used: if after certain time auto refresh

images:
settings gear:
    http://thenounproject.com/term/gear/2789/

google developer console:
https://console.developers.google.com/project